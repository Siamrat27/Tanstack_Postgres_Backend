/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as LoginRouteImport } from './routes/login'
import { Route as DashboardRouteImport } from './routes/dashboard'
import { Route as IndexRouteImport } from './routes/index'
import { Route as ApiUsersRouteImport } from './routes/api/users'
import { Route as ApiTodosRouteImport } from './routes/api/todos'
import { Route as ApiSchedulesRouteImport } from './routes/api/schedules'
import { Route as ApiRoundsRouteImport } from './routes/api/rounds'
import { Route as ApiLoginRouteImport } from './routes/api/login'
import { Route as ApiGroupsRouteImport } from './routes/api/groups'
import { Route as ApiGraduatesRouteImport } from './routes/api/graduates'
import { Route as ApiDiplomasRouteImport } from './routes/api/diplomas'
import { Route as ApiAttendsRouteImport } from './routes/api/attends'
import { Route as ApiUsersIdRouteImport } from './routes/api/users.$id'
import { Route as ApiSchedulesIdRouteImport } from './routes/api/schedules.$id'
import { Route as ApiRoundsIdRouteImport } from './routes/api/rounds.$id'
import { Route as ApiGraduatesStudent_idRouteImport } from './routes/api/graduates.$student_id'
import { Route as ApiDiplomasIdRouteImport } from './routes/api/diplomas.$id'
import { Route as ApiAttendsIdRouteImport } from './routes/api/attends.$id'

const LoginRoute = LoginRouteImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRouteImport,
} as any)
const DashboardRoute = DashboardRouteImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const ApiUsersRoute = ApiUsersRouteImport.update({
  id: '/api/users',
  path: '/api/users',
  getParentRoute: () => rootRouteImport,
} as any)
const ApiTodosRoute = ApiTodosRouteImport.update({
  id: '/api/todos',
  path: '/api/todos',
  getParentRoute: () => rootRouteImport,
} as any)
const ApiSchedulesRoute = ApiSchedulesRouteImport.update({
  id: '/api/schedules',
  path: '/api/schedules',
  getParentRoute: () => rootRouteImport,
} as any)
const ApiRoundsRoute = ApiRoundsRouteImport.update({
  id: '/api/rounds',
  path: '/api/rounds',
  getParentRoute: () => rootRouteImport,
} as any)
const ApiLoginRoute = ApiLoginRouteImport.update({
  id: '/api/login',
  path: '/api/login',
  getParentRoute: () => rootRouteImport,
} as any)
const ApiGroupsRoute = ApiGroupsRouteImport.update({
  id: '/api/groups',
  path: '/api/groups',
  getParentRoute: () => rootRouteImport,
} as any)
const ApiGraduatesRoute = ApiGraduatesRouteImport.update({
  id: '/api/graduates',
  path: '/api/graduates',
  getParentRoute: () => rootRouteImport,
} as any)
const ApiDiplomasRoute = ApiDiplomasRouteImport.update({
  id: '/api/diplomas',
  path: '/api/diplomas',
  getParentRoute: () => rootRouteImport,
} as any)
const ApiAttendsRoute = ApiAttendsRouteImport.update({
  id: '/api/attends',
  path: '/api/attends',
  getParentRoute: () => rootRouteImport,
} as any)
const ApiUsersIdRoute = ApiUsersIdRouteImport.update({
  id: '/$id',
  path: '/$id',
  getParentRoute: () => ApiUsersRoute,
} as any)
const ApiSchedulesIdRoute = ApiSchedulesIdRouteImport.update({
  id: '/$id',
  path: '/$id',
  getParentRoute: () => ApiSchedulesRoute,
} as any)
const ApiRoundsIdRoute = ApiRoundsIdRouteImport.update({
  id: '/$id',
  path: '/$id',
  getParentRoute: () => ApiRoundsRoute,
} as any)
const ApiGraduatesStudent_idRoute = ApiGraduatesStudent_idRouteImport.update({
  id: '/$student_id',
  path: '/$student_id',
  getParentRoute: () => ApiGraduatesRoute,
} as any)
const ApiDiplomasIdRoute = ApiDiplomasIdRouteImport.update({
  id: '/$id',
  path: '/$id',
  getParentRoute: () => ApiDiplomasRoute,
} as any)
const ApiAttendsIdRoute = ApiAttendsIdRouteImport.update({
  id: '/$id',
  path: '/$id',
  getParentRoute: () => ApiAttendsRoute,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/dashboard': typeof DashboardRoute
  '/login': typeof LoginRoute
  '/api/attends': typeof ApiAttendsRouteWithChildren
  '/api/diplomas': typeof ApiDiplomasRouteWithChildren
  '/api/graduates': typeof ApiGraduatesRouteWithChildren
  '/api/groups': typeof ApiGroupsRoute
  '/api/login': typeof ApiLoginRoute
  '/api/rounds': typeof ApiRoundsRouteWithChildren
  '/api/schedules': typeof ApiSchedulesRouteWithChildren
  '/api/todos': typeof ApiTodosRoute
  '/api/users': typeof ApiUsersRouteWithChildren
  '/api/attends/$id': typeof ApiAttendsIdRoute
  '/api/diplomas/$id': typeof ApiDiplomasIdRoute
  '/api/graduates/$student_id': typeof ApiGraduatesStudent_idRoute
  '/api/rounds/$id': typeof ApiRoundsIdRoute
  '/api/schedules/$id': typeof ApiSchedulesIdRoute
  '/api/users/$id': typeof ApiUsersIdRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/dashboard': typeof DashboardRoute
  '/login': typeof LoginRoute
  '/api/attends': typeof ApiAttendsRouteWithChildren
  '/api/diplomas': typeof ApiDiplomasRouteWithChildren
  '/api/graduates': typeof ApiGraduatesRouteWithChildren
  '/api/groups': typeof ApiGroupsRoute
  '/api/login': typeof ApiLoginRoute
  '/api/rounds': typeof ApiRoundsRouteWithChildren
  '/api/schedules': typeof ApiSchedulesRouteWithChildren
  '/api/todos': typeof ApiTodosRoute
  '/api/users': typeof ApiUsersRouteWithChildren
  '/api/attends/$id': typeof ApiAttendsIdRoute
  '/api/diplomas/$id': typeof ApiDiplomasIdRoute
  '/api/graduates/$student_id': typeof ApiGraduatesStudent_idRoute
  '/api/rounds/$id': typeof ApiRoundsIdRoute
  '/api/schedules/$id': typeof ApiSchedulesIdRoute
  '/api/users/$id': typeof ApiUsersIdRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/dashboard': typeof DashboardRoute
  '/login': typeof LoginRoute
  '/api/attends': typeof ApiAttendsRouteWithChildren
  '/api/diplomas': typeof ApiDiplomasRouteWithChildren
  '/api/graduates': typeof ApiGraduatesRouteWithChildren
  '/api/groups': typeof ApiGroupsRoute
  '/api/login': typeof ApiLoginRoute
  '/api/rounds': typeof ApiRoundsRouteWithChildren
  '/api/schedules': typeof ApiSchedulesRouteWithChildren
  '/api/todos': typeof ApiTodosRoute
  '/api/users': typeof ApiUsersRouteWithChildren
  '/api/attends/$id': typeof ApiAttendsIdRoute
  '/api/diplomas/$id': typeof ApiDiplomasIdRoute
  '/api/graduates/$student_id': typeof ApiGraduatesStudent_idRoute
  '/api/rounds/$id': typeof ApiRoundsIdRoute
  '/api/schedules/$id': typeof ApiSchedulesIdRoute
  '/api/users/$id': typeof ApiUsersIdRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/dashboard'
    | '/login'
    | '/api/attends'
    | '/api/diplomas'
    | '/api/graduates'
    | '/api/groups'
    | '/api/login'
    | '/api/rounds'
    | '/api/schedules'
    | '/api/todos'
    | '/api/users'
    | '/api/attends/$id'
    | '/api/diplomas/$id'
    | '/api/graduates/$student_id'
    | '/api/rounds/$id'
    | '/api/schedules/$id'
    | '/api/users/$id'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/dashboard'
    | '/login'
    | '/api/attends'
    | '/api/diplomas'
    | '/api/graduates'
    | '/api/groups'
    | '/api/login'
    | '/api/rounds'
    | '/api/schedules'
    | '/api/todos'
    | '/api/users'
    | '/api/attends/$id'
    | '/api/diplomas/$id'
    | '/api/graduates/$student_id'
    | '/api/rounds/$id'
    | '/api/schedules/$id'
    | '/api/users/$id'
  id:
    | '__root__'
    | '/'
    | '/dashboard'
    | '/login'
    | '/api/attends'
    | '/api/diplomas'
    | '/api/graduates'
    | '/api/groups'
    | '/api/login'
    | '/api/rounds'
    | '/api/schedules'
    | '/api/todos'
    | '/api/users'
    | '/api/attends/$id'
    | '/api/diplomas/$id'
    | '/api/graduates/$student_id'
    | '/api/rounds/$id'
    | '/api/schedules/$id'
    | '/api/users/$id'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  DashboardRoute: typeof DashboardRoute
  LoginRoute: typeof LoginRoute
  ApiAttendsRoute: typeof ApiAttendsRouteWithChildren
  ApiDiplomasRoute: typeof ApiDiplomasRouteWithChildren
  ApiGraduatesRoute: typeof ApiGraduatesRouteWithChildren
  ApiGroupsRoute: typeof ApiGroupsRoute
  ApiLoginRoute: typeof ApiLoginRoute
  ApiRoundsRoute: typeof ApiRoundsRouteWithChildren
  ApiSchedulesRoute: typeof ApiSchedulesRouteWithChildren
  ApiTodosRoute: typeof ApiTodosRoute
  ApiUsersRoute: typeof ApiUsersRouteWithChildren
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/dashboard': {
      id: '/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof DashboardRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/api/users': {
      id: '/api/users'
      path: '/api/users'
      fullPath: '/api/users'
      preLoaderRoute: typeof ApiUsersRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/api/todos': {
      id: '/api/todos'
      path: '/api/todos'
      fullPath: '/api/todos'
      preLoaderRoute: typeof ApiTodosRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/api/schedules': {
      id: '/api/schedules'
      path: '/api/schedules'
      fullPath: '/api/schedules'
      preLoaderRoute: typeof ApiSchedulesRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/api/rounds': {
      id: '/api/rounds'
      path: '/api/rounds'
      fullPath: '/api/rounds'
      preLoaderRoute: typeof ApiRoundsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/api/login': {
      id: '/api/login'
      path: '/api/login'
      fullPath: '/api/login'
      preLoaderRoute: typeof ApiLoginRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/api/groups': {
      id: '/api/groups'
      path: '/api/groups'
      fullPath: '/api/groups'
      preLoaderRoute: typeof ApiGroupsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/api/graduates': {
      id: '/api/graduates'
      path: '/api/graduates'
      fullPath: '/api/graduates'
      preLoaderRoute: typeof ApiGraduatesRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/api/diplomas': {
      id: '/api/diplomas'
      path: '/api/diplomas'
      fullPath: '/api/diplomas'
      preLoaderRoute: typeof ApiDiplomasRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/api/attends': {
      id: '/api/attends'
      path: '/api/attends'
      fullPath: '/api/attends'
      preLoaderRoute: typeof ApiAttendsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/api/users/$id': {
      id: '/api/users/$id'
      path: '/$id'
      fullPath: '/api/users/$id'
      preLoaderRoute: typeof ApiUsersIdRouteImport
      parentRoute: typeof ApiUsersRoute
    }
    '/api/schedules/$id': {
      id: '/api/schedules/$id'
      path: '/$id'
      fullPath: '/api/schedules/$id'
      preLoaderRoute: typeof ApiSchedulesIdRouteImport
      parentRoute: typeof ApiSchedulesRoute
    }
    '/api/rounds/$id': {
      id: '/api/rounds/$id'
      path: '/$id'
      fullPath: '/api/rounds/$id'
      preLoaderRoute: typeof ApiRoundsIdRouteImport
      parentRoute: typeof ApiRoundsRoute
    }
    '/api/graduates/$student_id': {
      id: '/api/graduates/$student_id'
      path: '/$student_id'
      fullPath: '/api/graduates/$student_id'
      preLoaderRoute: typeof ApiGraduatesStudent_idRouteImport
      parentRoute: typeof ApiGraduatesRoute
    }
    '/api/diplomas/$id': {
      id: '/api/diplomas/$id'
      path: '/$id'
      fullPath: '/api/diplomas/$id'
      preLoaderRoute: typeof ApiDiplomasIdRouteImport
      parentRoute: typeof ApiDiplomasRoute
    }
    '/api/attends/$id': {
      id: '/api/attends/$id'
      path: '/$id'
      fullPath: '/api/attends/$id'
      preLoaderRoute: typeof ApiAttendsIdRouteImport
      parentRoute: typeof ApiAttendsRoute
    }
  }
}

interface ApiAttendsRouteChildren {
  ApiAttendsIdRoute: typeof ApiAttendsIdRoute
}

const ApiAttendsRouteChildren: ApiAttendsRouteChildren = {
  ApiAttendsIdRoute: ApiAttendsIdRoute,
}

const ApiAttendsRouteWithChildren = ApiAttendsRoute._addFileChildren(
  ApiAttendsRouteChildren,
)

interface ApiDiplomasRouteChildren {
  ApiDiplomasIdRoute: typeof ApiDiplomasIdRoute
}

const ApiDiplomasRouteChildren: ApiDiplomasRouteChildren = {
  ApiDiplomasIdRoute: ApiDiplomasIdRoute,
}

const ApiDiplomasRouteWithChildren = ApiDiplomasRoute._addFileChildren(
  ApiDiplomasRouteChildren,
)

interface ApiGraduatesRouteChildren {
  ApiGraduatesStudent_idRoute: typeof ApiGraduatesStudent_idRoute
}

const ApiGraduatesRouteChildren: ApiGraduatesRouteChildren = {
  ApiGraduatesStudent_idRoute: ApiGraduatesStudent_idRoute,
}

const ApiGraduatesRouteWithChildren = ApiGraduatesRoute._addFileChildren(
  ApiGraduatesRouteChildren,
)

interface ApiRoundsRouteChildren {
  ApiRoundsIdRoute: typeof ApiRoundsIdRoute
}

const ApiRoundsRouteChildren: ApiRoundsRouteChildren = {
  ApiRoundsIdRoute: ApiRoundsIdRoute,
}

const ApiRoundsRouteWithChildren = ApiRoundsRoute._addFileChildren(
  ApiRoundsRouteChildren,
)

interface ApiSchedulesRouteChildren {
  ApiSchedulesIdRoute: typeof ApiSchedulesIdRoute
}

const ApiSchedulesRouteChildren: ApiSchedulesRouteChildren = {
  ApiSchedulesIdRoute: ApiSchedulesIdRoute,
}

const ApiSchedulesRouteWithChildren = ApiSchedulesRoute._addFileChildren(
  ApiSchedulesRouteChildren,
)

interface ApiUsersRouteChildren {
  ApiUsersIdRoute: typeof ApiUsersIdRoute
}

const ApiUsersRouteChildren: ApiUsersRouteChildren = {
  ApiUsersIdRoute: ApiUsersIdRoute,
}

const ApiUsersRouteWithChildren = ApiUsersRoute._addFileChildren(
  ApiUsersRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  DashboardRoute: DashboardRoute,
  LoginRoute: LoginRoute,
  ApiAttendsRoute: ApiAttendsRouteWithChildren,
  ApiDiplomasRoute: ApiDiplomasRouteWithChildren,
  ApiGraduatesRoute: ApiGraduatesRouteWithChildren,
  ApiGroupsRoute: ApiGroupsRoute,
  ApiLoginRoute: ApiLoginRoute,
  ApiRoundsRoute: ApiRoundsRouteWithChildren,
  ApiSchedulesRoute: ApiSchedulesRouteWithChildren,
  ApiTodosRoute: ApiTodosRoute,
  ApiUsersRoute: ApiUsersRouteWithChildren,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

import type { getRouter } from './router.tsx'
import type { createStart } from '@tanstack/react-start'
declare module '@tanstack/react-start' {
  interface Register {
    ssr: true
    router: Awaited<ReturnType<typeof getRouter>>
  }
}
